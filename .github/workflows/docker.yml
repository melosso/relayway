name: Publish

permissions:
  contents: write
  packages: write
  
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag to build from (leave blank for latest)'
        required: false
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  get-version:
    runs-on: ubuntu-latest
    name: Get version info
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      tag_name: ${{ steps.get_version.outputs.tag_name }}
    steps:
      - name: Get version
        id: get_version
        run: |
          if [ -n "${{ github.event.release.tag_name }}" ]; then
            tag="${{ github.event.release.tag_name }}"
          elif [ -n "${{ github.event.inputs.tag_name }}" ]; then
            tag="${{ github.event.inputs.tag_name }}"
          else
            tag=$(gh release list --limit 1 --repo "${{ github.repository }}" | awk '{print $1}')
          fi
          echo "version=${tag#v}" >> $GITHUB_OUTPUT
          echo "tag_name=${tag}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: get-version
    name: Release
    strategy:
      matrix:
        kind: ['windows']
        include:
          - kind: windows
            os: windows-latest
            target: win-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Build
        shell: bash
        run: |
          tag=${{ needs.get-version.outputs.tag_name }}
          release_name="Relayway-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish Relayway.csproj --framework net9.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name" -p:PublishSingleFile=true --self-contained false 

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${release_name}/*" "Relayway.xml"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"

      - name: Publish
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.get-version.outputs.tag_name }}
          files: "Relayway-*"
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  build-and-push-image:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ needs.get-version.outputs.tag_name }}
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}